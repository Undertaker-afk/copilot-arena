name: Build VSCode Extension

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'vscode/**'
      - '.github/workflows/build-extension.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'vscode/**'
      - '.github/workflows/build-extension.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./vscode
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: vscode/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run type check
      run: npm run check-types
    
    - name: Run linter
      run: npm run lint
    
    - name: Build extension
      run: npm run compile
    
    - name: Package extension
      run: npx vsce package --out copilot-arena-${{ matrix.node-version }}.vsix
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: copilot-arena-extension-node-${{ matrix.node-version }}
        path: vscode/*.vsix
        retention-days: 30
    
    - name: Run tests (if available)
      run: npm test
      continue-on-error: true

  build-production:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    defaults:
      run:
        working-directory: ./vscode
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: vscode/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build production package
      run: npm run package
    
    - name: Package extension
      run: npx vsce package --out copilot-arena-production.vsix
    
    - name: Upload production VSIX
      uses: actions/upload-artifact@v4
      with:
        name: copilot-arena-extension-production
        path: vscode/copilot-arena-production.vsix
        retention-days: 90
    
    - name: Create Release (on version tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: vscode/*.vsix
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
